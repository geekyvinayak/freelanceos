// 1. First, create this file: /api/reset-user-data.js
import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY // Use service role key for admin operations
)

export default async function handler(req, res) {
  // Verify the request is from Vercel Cron
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  // Optional: Add authentication check
  const authHeader = req.headers.authorization
  if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {
    return res.status(401).json({ error: 'Unauthorized' })
  }

  try {
    const resetQuery = `
      -- Complete User Data Reset and Population Query
      DO $$
      DECLARE
          target_user_id UUID;
      BEGIN
          -- Get the user ID
          SELECT id INTO target_user_id 
          FROM auth.users 
          WHERE email = 'user@example.com';
          
          -- Exit if user not found
          IF target_user_id IS NULL THEN
              RAISE NOTICE 'User with email user@example.com not found';
              RETURN;
          END IF;
          
          -- Delete existing data (in correct order due to foreign key constraints)
          DELETE FROM bills WHERE project_id IN (
              SELECT id FROM projects WHERE user_id = target_user_id
          );
          
          DELETE FROM notes WHERE project_id IN (
              SELECT id FROM projects WHERE user_id = target_user_id
          );
          
          DELETE FROM projects WHERE user_id = target_user_id;
          
          -- Insert new projects
          INSERT INTO projects (user_id, name, description, status, created_at) VALUES
          (target_user_id, 'E-commerce Website Redesign', 'Complete redesign and development of a modern e-commerce platform for a fashion retailer. Includes responsive design, payment integration, inventory management, and customer portal.', 'active', NOW() - INTERVAL '15 days'),
          (target_user_id, 'Mobile Banking App', 'Development of a secure mobile banking application with features like account management, money transfers, bill payments, and investment tracking. Built with React Native.', 'active', NOW() - INTERVAL '30 days'),
          (target_user_id, 'Corporate Brand Identity', 'Complete brand identity design for a tech startup including logo design, color palette, typography, business cards, letterheads, and brand guidelines.', 'completed', NOW() - INTERVAL '45 days'),
          (target_user_id, 'Restaurant Management System', 'Custom restaurant management system with POS integration, inventory tracking, staff scheduling, and customer loyalty program. Web-based dashboard with mobile app.', 'on_hold', NOW() - INTERVAL '60 days'),
          (target_user_id, 'Real Estate Platform', 'Modern real estate listing platform with advanced search filters, virtual tours, agent profiles, and lead management system. Includes both web and mobile versions.', 'active', NOW() - INTERVAL '10 days'),
          (target_user_id, 'Healthcare Dashboard', 'Patient management dashboard for healthcare providers with appointment scheduling, medical records, billing integration, and telemedicine features.', 'completed', NOW() - INTERVAL '90 days');

          -- Insert notes
          INSERT INTO notes (project_id, content, created_at) VALUES
          ((SELECT id FROM projects WHERE name = 'E-commerce Website Redesign' AND user_id = target_user_id), 'Initial client meeting completed. Discussed requirements for the new e-commerce platform. Client wants modern design with focus on mobile experience.', NOW() - INTERVAL '14 days'),
          ((SELECT id FROM projects WHERE name = 'E-commerce Website Redesign' AND user_id = target_user_id), 'Wireframes and mockups approved by client. Moving forward with development phase. Using React.js for frontend and Node.js for backend.', NOW() - INTERVAL '10 days'),
          ((SELECT id FROM projects WHERE name = 'E-commerce Website Redesign' AND user_id = target_user_id), 'Payment gateway integration completed. Stripe and PayPal both working correctly. Testing phase begins next week.', NOW() - INTERVAL '5 days'),
          ((SELECT id FROM projects WHERE name = 'Mobile Banking App' AND user_id = target_user_id), 'Security audit completed. All encryption protocols meet banking standards. Ready for beta testing with select users.', NOW() - INTERVAL '25 days'),
          ((SELECT id FROM projects WHERE name = 'Mobile Banking App' AND user_id = target_user_id), 'Beta testing feedback received. Users love the intuitive interface. Minor UI adjustments needed for accessibility compliance.', NOW() - INTERVAL '15 days'),
          ((SELECT id FROM projects WHERE name = 'Mobile Banking App' AND user_id = target_user_id), 'App store submission prepared. All documentation and compliance requirements met. Expecting approval within 2 weeks.', NOW() - INTERVAL '7 days'),
          ((SELECT id FROM projects WHERE name = 'Corporate Brand Identity' AND user_id = target_user_id), 'Brand discovery session completed. Client vision: modern, trustworthy, innovative. Target audience: tech-savvy professionals aged 25-45.', NOW() - INTERVAL '40 days'),
          ((SELECT id FROM projects WHERE name = 'Corporate Brand Identity' AND user_id = target_user_id), 'Logo concepts presented. Client selected option 2 with minor modifications. Color palette finalized: deep blue, silver, white.', NOW() - INTERVAL '35 days'),
          ((SELECT id FROM projects WHERE name = 'Corporate Brand Identity' AND user_id = target_user_id), 'All brand materials delivered. Client extremely satisfied with the final result. Brand guidelines document completed and approved.', NOW() - INTERVAL '30 days'),
          ((SELECT id FROM projects WHERE name = 'Restaurant Management System' AND user_id = target_user_id), 'Project on hold due to client budget constraints. Will resume in Q2 2024. 60% of development completed.', NOW() - INTERVAL '45 days'),
          ((SELECT id FROM projects WHERE name = 'Restaurant Management System' AND user_id = target_user_id), 'Client requested to pause project temporarily. All work backed up and documented for future continuation.', NOW() - INTERVAL '30 days'),
          ((SELECT id FROM projects WHERE name = 'Real Estate Platform' AND user_id = target_user_id), 'Project kickoff meeting scheduled. Requirements gathering phase begins. Client wants integration with MLS database.', NOW() - INTERVAL '9 days'),
          ((SELECT id FROM projects WHERE name = 'Real Estate Platform' AND user_id = target_user_id), 'Database schema designed. Property listing structure finalized. Starting with search functionality implementation.', NOW() - INTERVAL '5 days'),
          ((SELECT id FROM projects WHERE name = 'Real Estate Platform' AND user_id = target_user_id), 'Advanced search filters implemented. Map integration working perfectly. Client very happy with progress so far.', NOW() - INTERVAL '2 days'),
          ((SELECT id FROM projects WHERE name = 'Healthcare Dashboard' AND user_id = target_user_id), 'HIPAA compliance review completed. All security measures implemented correctly. Dashboard ready for production deployment.', NOW() - INTERVAL '85 days');

          -- Insert bills
          INSERT INTO bills (project_id, invoice_number, amount, description, status, due_date, created_at) VALUES
          ((SELECT id FROM projects WHERE name = 'E-commerce Website Redesign' AND user_id = target_user_id), 'INV-2023-0001', 3500.00, 'E-commerce Website Redesign - Phase 1: Design and Wireframing', 'paid', CURRENT_DATE - INTERVAL '10 days', NOW() - INTERVAL '12 days'),
          ((SELECT id FROM projects WHERE name = 'E-commerce Website Redesign' AND user_id = target_user_id), 'INV-2023-0002', 4200.00, 'E-commerce Website Redesign - Phase 2: Frontend Development', 'pending', CURRENT_DATE + INTERVAL '15 days', NOW() - INTERVAL '5 days'),
          ((SELECT id FROM projects WHERE name = 'Mobile Banking App' AND user_id = target_user_id), 'INV-2023-0003', 8500.00, 'Mobile Banking App Development - Complete app development', 'paid', CURRENT_DATE - INTERVAL '20 days', NOW() - INTERVAL '25 days'),
          ((SELECT id FROM projects WHERE name = 'Mobile Banking App' AND user_id = target_user_id), 'INV-2023-0004', 2800.00, 'Mobile Banking App - Security Audit and Testing', 'paid', CURRENT_DATE - INTERVAL '5 days', NOW() - INTERVAL '10 days'),
          ((SELECT id FROM projects WHERE name = 'Corporate Brand Identity' AND user_id = target_user_id), 'INV-2023-0005', 2200.00, 'Corporate Brand Identity Package - Complete branding', 'paid', CURRENT_DATE - INTERVAL '35 days', NOW() - INTERVAL '40 days'),
          ((SELECT id FROM projects WHERE name = 'Restaurant Management System' AND user_id = target_user_id), 'INV-2023-0006', 4500.00, 'Restaurant Management System - Phase 1 Development', 'pending', CURRENT_DATE + INTERVAL '30 days', NOW() - INTERVAL '50 days'),
          ((SELECT id FROM projects WHERE name = 'Real Estate Platform' AND user_id = target_user_id), 'INV-2023-0007', 3200.00, 'Real Estate Platform - Initial Development Phase', 'pending', CURRENT_DATE + INTERVAL '20 days', NOW() - INTERVAL '8 days'),
          ((SELECT id FROM projects WHERE name = 'Healthcare Dashboard' AND user_id = target_user_id), 'INV-2023-0008', 6800.00, 'Healthcare Dashboard Development - Complete system', 'paid', CURRENT_DATE - INTERVAL '85 days', NOW() - INTERVAL '90 days'),
          ((SELECT id FROM projects WHERE name = 'Healthcare Dashboard' AND user_id = target_user_id), 'INV-2023-0009', 1500.00, 'Healthcare Dashboard - Maintenance and Support Package', 'paid', CURRENT_DATE - INTERVAL '75 days', NOW() - INTERVAL '80 days');

          RAISE NOTICE 'User data successfully reset and populated for: user@example.com';
      END $$;
    `

    // Execute the reset query
    const { error } = await supabase.rpc('exec_sql', { query: resetQuery })
    
    if (error) {
      console.error('Error executing reset query:', error)
      return res.status(500).json({ error: 'Failed to reset user data' })
    }

    console.log('User data reset successfully at:', new Date().toISOString())
    return res.status(200).json({ 
      message: 'User data reset successfully',
      timestamp: new Date().toISOString()
    })

  } catch (error) {
    console.error('Error in reset function:', error)
    return res.status(500).json({ error: 'Internal server error' })
  }
}

// 2. Create vercel.json in your project root:
{
  "crons": [
    {
      "path": "/api/reset-user-data",
      "schedule": "*/20 * * * *"
    }
  ]
}

// 3. Add these environment variables to your Vercel project:
// SUPABASE_URL=your_supabase_url
// SUPABASE_SERVICE_ROLE_KEY=your_service_role_key
// CRON_SECRET=your_random_secret_key

// 4. If using raw SQL, create this alternative API endpoint:
// /api/reset-user-data-raw.js

import { Pool } from 'pg'

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
})

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  const authHeader = req.headers.authorization
  if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {
    return res.status(401).json({ error: 'Unauthorized' })
  }

  const client = await pool.connect()
  
  try {
    const resetQuery = `
      -- Your complete reset query here (same as above)
    `
    
    await client.query(resetQuery)
    
    console.log('User data reset successfully at:', new Date().toISOString())
    return res.status(200).json({ 
      message: 'User data reset successfully',
      timestamp: new Date().toISOString()
    })

  } catch (error) {
    console.error('Error executing reset query:', error)
    return res.status(500).json({ error: 'Failed to reset user data' })
  } finally {
    client.release()
  }
}